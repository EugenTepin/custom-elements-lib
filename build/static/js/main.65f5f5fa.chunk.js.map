{"version":3,"sources":["components/mock/index.js","alien_components/mock/index.js","actions/index.js","reducers/index.js","store/index.js","components/todo-footer/todo-footer.js","components/todo-footer/index.js","alien_components/todo-footer/index.js","components/todo-item/index.js","alien_components/todo-item/index.js","components/remove/index.js","alien_components/remove/index.js","components/todo-item-u/todo-item-u.js","components/todo-item-u/index.js","alien_components/todo-item-u/index.js","alien_components/store-component/index.js","index.js"],"names":["Mock","props","name","MockElement","ReactDOM","render","this","toString","_name","value","console","log","HTMLElement","CHANGE_THEME","CHANGE_COUNT","changeTheme","theme","type","initialState","count","alienApp","state","action","store","createStore","getState","TodoFooter","removeCompleted","val","hasCompleted","clearBtn","className","onClick","e","themeSelect","style","margin","onChange","target","to","activeClassName","React","Component","ComponentTodoFooter","connect","dispatch","ReactTodoFooter","event","CustomEvent","dispatchEvent","_hasCompleted","undefined","bind","addEventListener","detail","_router","navigate","stopPropagation","_status","TodoItem","editing","inputRef","createRef","prevProps","prevState","current","focus","todoTitle","todoCompleted","todoEdit","todoRemove","todoToggle","itemClass","editInput","ref","onBlur","setState","onKeyUp","key","checked","onDoubleClick","ReactTodoItem","dispatchCustomEvent","_todoTitle","_todoCompleted","_renderCount","_reactComponent","RemoveBtn","remove","RemoveElement","_remove","TodoItemU","themeStyle","backgroundColor","color","ComponentTodoItemU","ReactTodoItemU","unmountComponentAtNode","AlienStore","customElements","define"],"mappings":"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","file":"static/js/main.65f5f5fa.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Mock(props) {\n  return <span>Hello, {props.name}</span>;\n}\nexport default Mock;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Mock from 'components/mock';\n\nclass MockElement extends HTMLElement {\n    set name(value) {\n      this._name = value;\n      console.log(value);\n      this.render();\n    }\n    get name() {\n      return this._name;\n    }\n  \n    render() {\n      ReactDOM.render(<Mock name={this.name.toString()} />, this);\n    }\n  \n    connectedCallback() {\n      this._name = 'test';\n      this.render();\n    }\n  }\n  \n  export default MockElement;","export const CHANGE_THEME = 'CHANGE_THEME';\nexport const CHANGE_COUNT = 'CHANGE_COUNT';\n\nexport function changeTheme(theme) {\n  return {\n    theme,\n    type: CHANGE_THEME\n  };\n}\n\nexport function changeCount(count) {\n  return {\n    count,\n    type: CHANGE_COUNT\n  };\n}\n","import { CHANGE_THEME } from 'actions';\nimport { CHANGE_COUNT } from 'actions';\n\nconst initialState = {\n  theme: 'light',\n  count: 1\n};\n\nfunction alienApp(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_THEME:\n      return { ...state, theme: action.theme };\n    case CHANGE_COUNT:\n      return { ...state, count: action.count };\n    default:\n      return state;\n  }\n}\n\nexport default alienApp;\n","import { createStore } from 'redux';\nimport  alienApp  from 'reducers';\nconst store = createStore(alienApp);\nconsole.log(store.getState());\nexport default store;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass TodoFooter extends React.Component {\n  removeCompleted = () => {\n    this.props.removeCompleted();\n  };\n  changeTheme = (val) => {\n    this.props.changeTheme(val);\n  };\n\n  render() {\n    const { count, theme, hasCompleted } = this.props;\n    if (count === 0) {\n      return null;\n    }\n\n    const clearBtn = hasCompleted ? (\n      <button\n        className=\"clear-completed\"\n        onClick={(e) => {\n          this.removeCompleted();\n        }}\n      >\n        Clear Completed\n      </button>\n    ) : null;\n\n    const themeSelect = (\n      <select\n        value={theme}\n        style={{ margin: '0 10px' }}\n        className=\"clear-completed\"\n        onChange={(e) => {\n          this.changeTheme(e.target.value);\n        }}\n      >\n        <option value=\"light\">Light</option>\n        <option value=\"dark\">Dark</option>\n      </select>\n    );\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{count}</strong> {count === 1 ? 'item' : 'items'} left\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <NavLink\n              to=\"/\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/');\n              }}\n            >\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/active\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/active');\n              }}\n            >\n              Active\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/completed\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/completed');\n              }}\n            >\n              Completed\n            </NavLink>\n          </li>\n        </ul>\n        {clearBtn}\n        {themeSelect}\n      </footer>\n    );\n  }\n}\n\nexport default TodoFooter;\n","import { connect } from 'react-redux';\nimport { changeTheme } from 'actions';\nimport  TodoFooter  from \"components/todo-footer/todo-footer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        theme: state.theme,\n        count: state.count\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      changeTheme: (theme) => {\n            dispatch(changeTheme(theme));\n        }\n    }\n  }\n  \n  const ComponentTodoFooter = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TodoFooter);\n\n  export default ComponentTodoFooter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from 'store';\nimport { Provider } from 'react-redux';\nimport ComponentTodoFooter from 'components/todo-footer';\n\nclass ReactTodoFooter extends HTMLElement {\n    set status(value) {\n      this._status = value;\n      this.render();\n    }\n    get status() {\n      return this._status;\n    }\n  \n    set router(value) {\n      this._router = value;\n      this.render();\n    }\n  \n    // set count(value) {\n    //   this._count = value;\n    //   this.render();\n    // }\n    // get count() {\n    //   return this._count;\n    // }\n  \n    set hasCompleted(value) {\n      this._hasCompleted = value;\n      this.render();\n    }\n    get hasCompleted() {\n      return this._hasCompleted;\n    }\n  \n    removeCompleted() {\n      var event = new CustomEvent('clear-completed');\n      this.dispatchEvent(event);\n    }\n  \n    render() {\n      // const { _count, _hasCompleted, removeCompleted } = this;\n      // const propsReady = _count !== undefined && _hasCompleted !== undefined;\n      const { _hasCompleted, removeCompleted } = this;\n      const propsReady =  _hasCompleted !== undefined;\n  \n      if (propsReady) {\n        ReactDOM.render(\n          <Provider store={store}>\n            <ComponentTodoFooter\n              //count={_count}\n              hasCompleted={_hasCompleted}\n              removeCompleted={removeCompleted.bind(this)}\n            />\n          </Provider>,\n          this\n        );\n      }\n    }\n  \n    connectedCallback() {\n      this.addEventListener('nav-link-click', (e) => {\n        console.log(e);\n        const { to } = e.detail;\n        this._router.navigate([to]);\n        e.stopPropagation();\n      });\n    }\n  }\n  \n  export default ReactTodoFooter;","import React from 'react';\n\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState.editing && this.state.editing) {\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    const {\n      todoTitle,\n      todoCompleted,\n      todoEdit,\n      todoRemove,\n      todoToggle\n    } = this.props;\n\n    let itemClass = todoCompleted ? 'completed' : '';\n    let editInput = '';\n    if (this.state.editing) {\n      itemClass += ' editing';\n      editInput = (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={todoTitle}\n          ref={this.inputRef}\n          onChange={(e) => {\n            todoEdit(e.target.value);\n          }}\n          onBlur={(e) => {\n            this.setState({ editing: false });\n          }}\n          onKeyUp={(e) => {\n            if (e.key === 'Enter' || e.key === 'Escape') {\n              this.setState({ editing: false });\n            }\n          }}\n        />\n      );\n    }\n\n    return (\n      <li className={itemClass}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todoCompleted}\n            onChange={(e) => {\n              todoToggle();\n            }}\n          />\n          <label\n            onDoubleClick={(e) => {\n              this.setState({ editing: true });\n            }}\n          >\n            {todoTitle}\n          </label>\n          <button\n            className=\"destroy\"\n            onClick={(e) => {\n              todoRemove();\n            }}\n          ></button>\n        </div>\n        {editInput}\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoItem from 'components/todo-item';\nclass ReactTodoItem extends HTMLElement {\n    set todoTitle(value) {\n      this._todoTitle = value;\n      this.render();\n    }\n    get todoTitle() {\n      return this._todoTitle;\n    }\n  \n    set todoCompleted(value) {\n      this._todoCompleted = value;\n      this.render();\n    }\n  \n    get todoCompleted() {\n      return this._todoCompleted;\n    }\n  \n    dispatchCustomEvent(name, detail) {\n      var event =\n        detail !== undefined\n          ? new CustomEvent(name, { detail })\n          : new CustomEvent(name);\n  \n      return this.dispatchEvent(event);\n    }\n  \n    todoToggle() {\n      this.dispatchCustomEvent('todo-toggle');\n    }\n  \n    todoRemove() {\n      this.dispatchCustomEvent('todo-remove');\n    }\n  \n    todoEdit(value) {\n      this.dispatchCustomEvent('todo-update-value', value);\n      this.dispatchCustomEvent('todo-edit');\n    }\n  \n    render() {\n      const {\n        _todoTitle,\n        _todoCompleted,\n        todoEdit,\n        todoToggle,\n        todoRemove\n      } = this;\n  \n      const propsReady = _todoTitle !== null && _todoCompleted !== null;\n  \n      if (propsReady) {\n        this._renderCount++;\n        // this._reactComponent for debugging only\n        this._reactComponent = ReactDOM.render(\n          <TodoItem\n            todoTitle={_todoTitle}\n            todoCompleted={_todoCompleted}\n            todoEdit={todoEdit.bind(this)}\n            todoToggle={todoToggle.bind(this)}\n            todoRemove={todoRemove.bind(this)}\n          />,\n          this\n        );\n        console.log('Render count: %s', this._renderCount);\n        console.log(this._reactComponent);\n      }\n    }\n  \n    connectedCallback() {\n      console.log('Element is connected.');\n      // this._renderCount only for debug\n      this._renderCount = 0;\n  \n      this._todoTitle = null;\n      this._todoCompleted = null;\n      this.addEventListener('todo-update-value', (e) => {\n        console.log('todo-update-value detail: %s', e.detail);\n        this.value = e.detail;\n      });\n    }\n  }\n  \n  export default ReactTodoItem;","import React from 'react';\n\nfunction RemoveBtn(props) {\n  return (\n    <button\n      onClick={(e) => {\n        props.remove();\n      }}\n    >\n      Remove\n    </button>\n  );\n}\n\nexport default RemoveBtn;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RemoveBtn from 'components/remove';\n\nclass RemoveElement extends HTMLElement {\n    set remove(value) {\n      this._remove = value;\n      console.log(value);\n      this.render();\n    }\n  \n    render() {\n      ReactDOM.render(<RemoveBtn remove={this._remove} />, this);\n    }\n  \n    connectedCallback() {\n      this.render();\n    }\n  }\n  \n  export default RemoveElement;","import React from 'react';\n\nclass TodoItemU extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState.editing && this.state.editing) {\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    const {\n      todoTitle,\n      todoCompleted,\n      todoEdit,\n      todoRemove,\n      todoToggle,\n      theme\n    } = this.props;\n\n    let itemClass = todoCompleted ? 'completed' : '';\n    let editInput = '';\n    if (this.state.editing) {\n      itemClass += ' editing';\n      editInput = (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={todoTitle}\n          ref={this.inputRef}\n          onChange={(e) => {\n            todoEdit(e.target.value);\n          }}\n          onBlur={(e) => {\n            this.setState({ editing: false });\n          }}\n          onKeyUp={(e) => {\n            if (e.key === 'Enter' || e.key === 'Escape') {\n              this.setState({ editing: false });\n            }\n          }}\n        />\n      );\n    }\n    \n    const themeStyle = {\n      backgroundColor : (theme === 'dark')? '#444' :'#fff',\n      color: (theme === 'dark')? '#fff' :'#000',\n    };\n\n    return (\n      <li className={itemClass} style={themeStyle}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todoCompleted}\n            onChange={(e) => {\n              todoToggle();\n            }}\n          />\n          <label\n            onDoubleClick={(e) => {\n              this.setState({ editing: true });\n            }}\n          >\n            {todoTitle}\n          </label>\n          <button\n            className=\"destroy\"\n            onClick={(e) => {\n              todoRemove();\n            }}\n          ></button>\n        </div>\n        {editInput}\n      </li>\n    );\n  }\n}\n\n\nexport default TodoItemU;\n","import { connect } from 'react-redux';\nimport TodoItemU from 'components/todo-item-u/todo-item-u';\n\nconst mapStateToProps = (state) => {\n    return {\n        theme: state.theme\n    }\n  }\n  \n  const ComponentTodoItemU = connect(\n    mapStateToProps,\n  )(TodoItemU);\n\n  export default ComponentTodoItemU;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from 'store';\nimport { Provider } from 'react-redux';\nimport ComponentTodoItemU from 'components/todo-item-u';\n\nclass ReactTodoItemU extends HTMLElement {\n    set todoTitle(value) {\n      this._todoTitle = value;\n      this.render();\n    }\n    get todoTitle() {\n      return this._todoTitle;\n    }\n  \n    set todoCompleted(value) {\n      this._todoCompleted = value;\n      this.render();\n    }\n  \n    get todoCompleted() {\n      return this._todoCompleted;\n    }\n  \n    dispatchCustomEvent(name, detail) {\n      var event =\n        detail !== undefined\n          ? new CustomEvent(name, { detail })\n          : new CustomEvent(name);\n  \n      return this.dispatchEvent(event);\n    }\n  \n    todoToggle() {\n      this.dispatchCustomEvent('todo-toggle');\n    }\n  \n    todoRemove() {\n      this.dispatchCustomEvent('todo-remove');\n    }\n  \n    todoEdit(value) {\n      this.dispatchCustomEvent('todo-update-value', value);\n      this.dispatchCustomEvent('todo-edit');\n    }\n  \n    render() {\n      const {\n        _todoTitle,\n        _todoCompleted,\n        todoEdit,\n        todoToggle,\n        todoRemove\n      } = this;\n  \n      const propsReady = _todoTitle !== null && _todoCompleted !== null;\n  \n      if (propsReady) {\n        this._renderCount++;\n        // this._reactComponent for debugging only\n        this._reactComponent = ReactDOM.render(\n          <Provider store={store}>\n            <ComponentTodoItemU\n              todoTitle={_todoTitle}\n              todoCompleted={_todoCompleted}\n              todoEdit={todoEdit.bind(this)}\n              todoToggle={todoToggle.bind(this)}\n              todoRemove={todoRemove.bind(this)}\n            />\n          </Provider>,\n          this\n        );\n        console.log('Render count: %s', this._renderCount);\n        console.log(this._reactComponent);\n      }\n    }\n  \n    connectedCallback() {\n      console.log('Element is connected.');\n      // this._renderCount only for debug\n      this._renderCount = 0;\n  \n      this._todoTitle = null;\n      this._todoCompleted = null;\n      this.addEventListener('todo-update-value', (e) => {\n        console.log('todo-update-value detail: %s', e.detail);\n        this.value = e.detail;\n      });\n    }\n  \n    disconnectedCallback() {\n      ReactDOM.unmountComponentAtNode(this);\n    }\n  }\n  \n  export default ReactTodoItemU;","import store from 'store';\nimport { changeTheme } from 'actions';\nimport { changeCount } from 'actions';\n\nclass AlienStore extends HTMLElement {\n    set theme(value) {\n        store.dispatch(changeTheme(value));\n        console.log('set theme to %s',value);\n    }\n    get theme() {\n      console.log('get theme');\n      return store.getState().theme;\n    }\n  \n    set count(value){\n      store.dispatch(changeCount(value));\n      console.log('set count to %s',value);\n    }\n\n    get count(){\n      console.log('get count');\n      return store.getState().count;\n    }\n\n    connectedCallback() {\n        console.log('Alien store at your disposal!')\n    }\n  }\n\nexport default AlienStore;","//import store from 'store'\n//import {changeCount} from 'actions'\n// make custom element definition here\nimport MockElement from 'alien_components/mock';\nimport ReactTodoFooter from 'alien_components/todo-footer';\nimport ReactTodoItem from 'alien_components/todo-item';\nimport RemoveElement from 'alien_components/remove';\nimport ReactTodoItemU from 'alien_components/todo-item-u';\n\nimport AlienStore from 'alien_components/store-component';\n\ncustomElements.define('redux-store', AlienStore);\nconsole.log('0.6.0');\n\ncustomElements.define('mock-element', MockElement);\ncustomElements.define('react-todo-footer', ReactTodoFooter);\ncustomElements.define('react-todo-item', ReactTodoItem);\ncustomElements.define('react-todo-item-unmount', ReactTodoItemU);\ncustomElements.define('react-remove-btn', RemoveElement);\n\n\n// var reduxStore = document.createElement('redux-store');\n// var footer = document.createElement('react-todo-footer');\n\n//store.dispatch(changeCount(25));\n// reduxStore.count = 25;\n// footer.hasCompleted = true;\n\n// document.body.appendChild(footer);\n// document.body.appendChild(reduxStore);\n//console.log(store.getState())\n// class Dummy extends HTMLElement {\n\n// }\n\n// let PowerDummy = new Proxy(Dummy,{\n//     construct(target, args, extended){\n//         console.log('bingo');\n        \n//         return Reflect.construct(target, args, extended);\n//     }\n// });\n// customElements.define('react-test', PowerDummy);\n\n// const test = document.createElement('react-test');\n\n// document.body.append(test);\n\n// var HTMLElementProxy = new Proxy(HTMLElement,{\n//     construct(target,args,extend){\n//         console.log('bingo');\n\n//         const inst = Reflect.construct(target,args,extend);\n//         return new Proxy(inst, {\n//             get(instTarget, prop){\n//                 return instTarget[prop];\n//             }\n//         });\n//     }\n// })\n\n// class Dummy extends HTMLElementProxy{\n\n// }\n\n// customElements.define('react-test', Dummy);\n\n// const test = document.createElement('react-test');\n\n// document.body.append(test);\n\n// console.log('')\n// let p = new Proxy(Dummy,{\n//     construct(target, args, extended){\n//         //console.log('bingo');\n//         return Reflect.construct(target, args, extended);\n//     }\n// });\n\n// p = new Proxy(ABC,{\n//     construct(target, args, extended){\n//         console.log(extended)\n//         return Reflect.construct(target,args);\n//     }\n// });\n//\n\n//customElements.define('react-test', ABC);\n\n// const test = document.createElement('react-test');\n\n// document.body.append(test);\n\n//customElements.define('react-test', Dummy);\n\n//const test = document.createElement('react-test');\n\n// class LibElement extends HTMLElement {\n//     static get componentName () {\n//         return this.name.replace(/[A-Z]/g, char => `-${ char.toLowerCase() }`).substring(1);\n//     }\n// }\n\n// const LibElementProxy = new Proxy(LibElement, {\n//     construct (base, args, extended) {\n//         if (!customElements.get(extended.componentName)) {\n//             customElements.define(extended.componentName, extended);\n//         }\n\n//         return Reflect.construct(base, args, extended);\n//     }\n// });\n\n// class MyCustomComponent extends LibElementProxy {}\n// class MyCustomComponentExtended extends MyCustomComponent {}\n\n// document.body.appendChild(new MyCustomComponent());\n// document.body.appendChild(new MyCustomComponentExtended());\n\n// const proxyAlienStore = new Proxy(Dummy,{\n//     construct(){\n//         const inst = document.createElement('alien-store-proto');\n//         const instanceProxy = new Proxy(inst, {\n//             get(target, prop){\n//                 console.log('Proxy msg: %s',prop);\n//                 return target[prop];\n//             }\n//         });\n//         return instanceProxy;\n//     }\n// });\n\n// import store  from 'store';\n// import { changeTheme } from 'actions';\n\n\n//customElements.define('alien-store', proxyAlienStore);\n\n// var todoItemElem = document.createElement('react-todo-item-unmount');\n// todoItemElem.todoCompleted = true;\n// todoItemElem.todoTitle = \"bingo\";\n// todoItemElem.todoToggle = () => {console.log('todo-toggle')};\n// todoItemElem.todoRemove = () => {console.log('todo-remove')};\n// todoItemElem.todoEdit = () => {console.log('todo-edit')};\n\n// document.body.append(todoItemElem);\n\n// var todoFooter = document.createElement('react-todo-footer');\n// todoFooter.status = 'All';\n// todoFooter.router = {};\n// todoFooter.count = 1;\n// todoFooter.hasCompleted = true;\n// todoFooter.removeCompleted = () => {console.log('removeCompleted')}\n// document.body.append(todoFooter);\n\n// const alienStore = document.createElement('alien-store');\n// document.body.append(alienStore);\n\n// console.log(alienStore.id);\n\n// // setTimeout(()=>{\n// //     store.dispatch(changeTheme('dark'))\n// // }, 3000);\n\n// let store = {\n//     a: 'a prop from store',\n//     b: 'b prop from store'\n// };\n\n// class First {\n// }\n\n\n//  First = new Proxy(First, {\n//     construct(target, args, ext){\n//         let inst = Reflect.construct(target, args, ext);\n//         return new Proxy(inst, {\n//             get(instTarget, prop){\n//                 console.log('proxy: %s',prop);\n//                 // if(prop in store)\n//                 if(Reflect.has(store, prop)){\n//                     // return store[prop]; \n//                     return Reflect.get(store, prop);\n//                 }\n//                 return instTarget[prop];\n//             }\n//         });\n//     }\n// });\n\n// let f = new First();\n\n// console.log(f.a);\n// console.log(f.c);"],"sourceRoot":""}