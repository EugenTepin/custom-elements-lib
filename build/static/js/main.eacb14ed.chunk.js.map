{"version":3,"sources":["components/mock.js","components/todo-footer.js","index.js"],"names":["Mock","props","name","MockElement","ReactDOM","render","this","toString","_name","value","console","log","HTMLElement","TodoFooter","removeCompleted","count","clearBtn","hasCompleted","className","onClick","e","to","activeClassName","React","Component","ReactTodoFooter","event","CustomEvent","dispatchEvent","_count","_hasCompleted","bind","addEventListener","detail","_router","navigate","stopPropagation","_status","customElements","define"],"mappings":"8PAGA,SAASA,EAAKC,GACV,OAAO,wCAAcA,EAAMC,M,IAyBhBC,E,iLAVPC,IAASC,OAAO,kBAACL,EAAD,CAAME,KAAMI,KAAKJ,KAAKK,aAAcD,Q,0CAIpDA,KAAKE,MAAQ,OACbF,KAAKD,W,yBAfFI,GACPH,KAAKE,MAAQC,EACbC,QAAQC,IAAIF,GACZH,KAAKD,U,eAGL,OAAOC,KAAKE,U,eARUI,c,OCHpBC,E,2MAKJC,gBAAkB,WAChB,EAAKb,MAAMa,mB,wEAED,IAAD,OACCC,EAAQT,KAAKL,MAAMc,MACzB,GAAa,IAAVA,EACC,OAAO,KAGX,IAAMC,EAAYV,KAAKL,MAAMgB,aAAe,4BAAQC,UAAU,kBAAkBC,QAAU,SAACC,GAAO,EAAKN,oBAA3D,mBAAyG,GACrJ,OACA,4BAAQI,UAAU,UAClB,0BAAMA,UAAU,cAAa,gCAASH,GAAtC,IAAiE,IAAVA,EAAc,OAAS,QAA9E,SACA,wBAAIG,UAAU,WACV,4BACI,kBAAC,IAAD,CAASG,GAAG,IAAIC,gBAAgB,WAAWH,QAAS,SAACC,GAAOV,QAAQC,IAAI,OAAxE,QAEJ,4BACI,kBAAC,IAAD,CAASU,GAAG,UAAUC,gBAAgB,WAAYH,QAAS,SAACC,GAAOV,QAAQC,IAAI,aAA/E,WAEJ,4BACI,kBAAC,IAAD,CAASU,GAAG,aAAaC,gBAAgB,WAAYH,QAAS,SAACC,GAAOV,QAAQC,IAAI,gBAAlF,eAGPK,O,GA7BgBO,IAAMC,WA6FhBC,E,0LAvBX,IAAIC,EAAQ,IAAIC,YAAY,mBAC5BrB,KAAKsB,cAAcF,K,+BAIftB,IAASC,OACL,kBAAC,EAAD,CAAaU,MAAOT,KAAKuB,OAASZ,aAAcX,KAAKwB,cAAehB,gBAAiBR,KAAKQ,gBAAgBiB,KAAKzB,QAC/GA,Q,0CAGa,IAAD,OAClBA,KAAK0B,iBAAiB,kBAAkB,SAACZ,GACvCV,QAAQC,IAAIS,GADiC,IAEtCC,EAAMD,EAAEa,OAARZ,GACP,EAAKa,QAAQC,SAAS,CAACd,IACvBD,EAAEgB,qBAGF9B,KAAKD,W,2BAnDAI,GACTH,KAAK+B,QAAU5B,EACfH,KAAKD,U,eAGL,OAAOC,KAAK+B,U,2BAGH5B,GACTH,KAAK4B,QAAUzB,EACfH,KAAKD,W,0BAMGI,GACRH,KAAKuB,OAASpB,EACdH,KAAKD,U,eAGL,OAAOC,KAAKuB,S,iCAGGpB,GACfH,KAAKwB,cAAgBrB,EACrBH,KAAKD,U,eAGL,OAAOC,KAAKwB,kB,eA/BclB,cCpC9B0B,eAAeC,OAAO,eAAgBpC,GACtCmC,eAAeC,OAAO,oBAAqBd,K","file":"static/js/main.eacb14ed.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from 'react-dom';\n\nfunction Mock(props){\n    return <span>Hello, {props.name}</span>;\n}\n\nclass MockElement extends HTMLElement {\n\n  set name(value) {\n    this._name = value;\n    console.log(value);\n    this.render();\n  }\n  get name() {\n    return this._name;\n  }\n\n    render(){\n        ReactDOM.render(<Mock name={this.name.toString()}/>,this);\n    }\n\n    connectedCallback() {\n        this._name = 'test';\n        this.render();\n    }\n }\n\n\nexport default MockElement;","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { NavLink } from \"react-router-dom\";\n\nclass TodoFooter extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   // this.state = {clicks: 0};\n  // }\n  removeCompleted = () => {\n    this.props.removeCompleted();\n  }\n    render() {\n        const count = this.props.count;\n        if(count === 0){\n            return null;\n        }\n\n        const clearBtn = (this.props.hasCompleted)? <button className=\"clear-completed\" onClick= {(e) => {this.removeCompleted();}}>Clear Completed</button>:'';\n        return (\n        <footer className=\"footer\" >\n        <span className=\"todo-count\"><strong>{count}</strong> {count === 1 ? 'item' : 'items'} left</span>\n        <ul className=\"filters\">\n            <li>\n                <NavLink to=\"/\" activeClassName=\"selected\" onClick={(e) => {console.log(\"/\");}} >All</NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/active\" activeClassName=\"selected\"  onClick={(e) => {console.log(\"/active\");}}>Active</NavLink>\n            </li>\n            <li>\n                <NavLink to=\"/completed\" activeClassName=\"selected\"  onClick={(e) => {console.log(\"/completed\")}} >Completed</NavLink>\n            </li>\n        </ul>\n        {clearBtn}\n        </footer>\n        );\n    }\n}\n \nclass ReactTodoFooter extends HTMLElement {\n\n  set status(value) {\n    this._status = value;\n    this.render();\n  }\n  get status() {\n    return this._status;\n  }\n\n  set router(value) {\n    this._router = value;\n    this.render();\n  }\n  // get status() {\n  //   return this._status;\n  // }\n\n  set count(value) {\n    this._count = value;\n    this.render();\n  }\n  get count() {\n    return this._count;\n  }\n\n  set hasCompleted(value) {\n    this._hasCompleted = value;\n    this.render();\n  }\n  get hasCompleted() {\n    return this._hasCompleted;\n  }\n\n  removeCompleted() {\n    var event = new CustomEvent(\"clear-completed\");\n    this.dispatchEvent(event);\n  }\n\n    render(){\n        ReactDOM.render(\n            <TodoFooter  count={this._count}  hasCompleted={this._hasCompleted} removeCompleted={this.removeCompleted.bind(this)}/>,\n            this);\n    }\n\n    connectedCallback() {\n      this.addEventListener('nav-link-click', (e) => {\n        console.log(e);\n        const {to} = e.detail;\n        this._router.navigate([to]);\n        e.stopPropagation();\n      });  \n       \n        this.render();\n    }\n }\n\n\nexport default ReactTodoFooter;","// make custom element definition here\nimport MockElement from 'components/mock';\nimport ReactTodoFooter from 'components/todo-footer';\ncustomElements.define(\"mock-element\", MockElement);\ncustomElements.define(\"react-todo-footer\", ReactTodoFooter);\n"],"sourceRoot":""}