{"version":3,"sources":["components/mock/index.js","alien_components/mock/index.js","actions/index.js","reducers/index.js","store/index.js","components/todo-footer/todo-footer.js","components/todo-footer/index.js","alien_components/todo-footer/index.js","components/todo-item/index.js","alien_components/todo-item/index.js","components/remove/index.js","alien_components/remove/index.js","components/todo-item-u/todo-item-u.js","components/todo-item-u/index.js","alien_components/todo-item-u/index.js","index.js"],"names":["Mock","props","name","MockElement","ReactDOM","render","this","toString","_name","value","console","log","HTMLElement","CHANGE_THEME","initialState","theme","alienApp","state","action","type","store","createStore","getState","TodoFooter","removeCompleted","changeTheme","val","count","hasCompleted","clearBtn","className","onClick","e","themeSelect","style","margin","onChange","target","to","activeClassName","React","Component","ComponentTodoFooter","connect","dispatch","ReactTodoFooter","event","CustomEvent","dispatchEvent","_count","_hasCompleted","undefined","bind","addEventListener","detail","_router","navigate","stopPropagation","_status","TodoItem","editing","inputRef","createRef","prevProps","prevState","current","focus","todoTitle","todoCompleted","todoEdit","todoRemove","todoToggle","itemClass","editInput","ref","onBlur","setState","onKeyUp","key","checked","onDoubleClick","ReactTodoItem","dispatchCustomEvent","_todoTitle","_todoCompleted","_renderCount","_reactComponent","RemoveBtn","remove","RemoveElement","_remove","TodoItemU","themeStyle","backgroundColor","color","ComponentTodoItemU","ReactTodoItemU","unmountComponentAtNode","customElements","define"],"mappings":"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","file":"static/js/main.ee55f304.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Mock(props) {\n  return <span>Hello, {props.name}</span>;\n}\nexport default Mock;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Mock from 'components/mock';\n\nclass MockElement extends HTMLElement {\n    set name(value) {\n      this._name = value;\n      console.log(value);\n      this.render();\n    }\n    get name() {\n      return this._name;\n    }\n  \n    render() {\n      ReactDOM.render(<Mock name={this.name.toString()} />, this);\n    }\n  \n    connectedCallback() {\n      this._name = 'test';\n      this.render();\n    }\n  }\n  \n  export default MockElement;","export const CHANGE_THEME = 'CHANGE_THEME';\n\nexport function changeTheme(theme) {\n    return {\n        theme,\n        type: CHANGE_THEME\n    }\n}\n","import { CHANGE_THEME } from 'actions'\n\nconst initialState = {\n    theme: 'light'\n};\n\nfunction alienApp(state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_THEME:\n            return { ...state, theme: action.theme};\n        default:\n            return state;\n    }\n}\n\nexport default alienApp;","import { createStore } from 'redux';\nimport  alienApp  from 'reducers';\nconst store = createStore(alienApp);\nconsole.log(store.getState());\nexport default store;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass TodoFooter extends React.Component {\n  removeCompleted = () => {\n    this.props.removeCompleted();\n  };\n  changeTheme = (val) => {\n    this.props.changeTheme(val);\n  };\n\n  render() {\n    const { count, theme, hasCompleted } = this.props;\n    if (count === 0) {\n      return null;\n    }\n\n    const clearBtn = hasCompleted ? (\n      <button\n        className=\"clear-completed\"\n        onClick={(e) => {\n          this.removeCompleted();\n        }}\n      >\n        Clear Completed\n      </button>\n    ) : null;\n\n    const themeSelect = (\n      <select\n        value={theme}\n        style={{ margin: '0 10px' }}\n        className=\"clear-completed\"\n        onChange={(e) => {\n          this.changeTheme(e.target.value);\n        }}\n      >\n        <option value=\"light\">Light</option>\n        <option value=\"dark\">Dark</option>\n      </select>\n    );\n\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{count}</strong> {count === 1 ? 'item' : 'items'} left\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <NavLink\n              to=\"/\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/');\n              }}\n            >\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/active\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/active');\n              }}\n            >\n              Active\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/completed\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/completed');\n              }}\n            >\n              Completed\n            </NavLink>\n          </li>\n        </ul>\n        {clearBtn}\n        {themeSelect}\n      </footer>\n    );\n  }\n}\n\nexport default TodoFooter;\n","import { connect } from 'react-redux';\nimport { changeTheme } from 'actions';\nimport  TodoFooter  from \"components/todo-footer/todo-footer\";\n\nconst mapStateToProps = (state) => {\n    return {\n        theme: state.theme\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      changeTheme: (theme) => {\n            dispatch(changeTheme(theme));\n        }\n    }\n  }\n  \n  const ComponentTodoFooter = connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(TodoFooter);\n\n  export default ComponentTodoFooter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from 'store';\nimport { Provider } from 'react-redux';\nimport ComponentTodoFooter from 'components/todo-footer';\n\nclass ReactTodoFooter extends HTMLElement {\n    set status(value) {\n      this._status = value;\n      this.render();\n    }\n    get status() {\n      return this._status;\n    }\n  \n    set router(value) {\n      this._router = value;\n      this.render();\n    }\n  \n    set count(value) {\n      this._count = value;\n      this.render();\n    }\n    get count() {\n      return this._count;\n    }\n  \n    set hasCompleted(value) {\n      this._hasCompleted = value;\n      this.render();\n    }\n    get hasCompleted() {\n      return this._hasCompleted;\n    }\n  \n    removeCompleted() {\n      var event = new CustomEvent('clear-completed');\n      this.dispatchEvent(event);\n    }\n  \n    render() {\n      const { _count, _hasCompleted, removeCompleted } = this;\n  \n      const propsReady = _count !== undefined && _hasCompleted !== undefined;\n  \n      if (propsReady) {\n        ReactDOM.render(\n          <Provider store={store}>\n            <ComponentTodoFooter\n              count={_count}\n              hasCompleted={_hasCompleted}\n              removeCompleted={removeCompleted.bind(this)}\n            />\n          </Provider>,\n          this\n        );\n      }\n    }\n  \n    connectedCallback() {\n      this.addEventListener('nav-link-click', (e) => {\n        console.log(e);\n        const { to } = e.detail;\n        this._router.navigate([to]);\n        e.stopPropagation();\n      });\n    }\n  }\n  \n  export default ReactTodoFooter;","import React from 'react';\n\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState.editing && this.state.editing) {\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    const {\n      todoTitle,\n      todoCompleted,\n      todoEdit,\n      todoRemove,\n      todoToggle\n    } = this.props;\n\n    let itemClass = todoCompleted ? 'completed' : '';\n    let editInput = '';\n    if (this.state.editing) {\n      itemClass += ' editing';\n      editInput = (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={todoTitle}\n          ref={this.inputRef}\n          onChange={(e) => {\n            todoEdit(e.target.value);\n          }}\n          onBlur={(e) => {\n            this.setState({ editing: false });\n          }}\n          onKeyUp={(e) => {\n            if (e.key === 'Enter' || e.key === 'Escape') {\n              this.setState({ editing: false });\n            }\n          }}\n        />\n      );\n    }\n\n    return (\n      <li className={itemClass}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todoCompleted}\n            onChange={(e) => {\n              todoToggle();\n            }}\n          />\n          <label\n            onDoubleClick={(e) => {\n              this.setState({ editing: true });\n            }}\n          >\n            {todoTitle}\n          </label>\n          <button\n            className=\"destroy\"\n            onClick={(e) => {\n              todoRemove();\n            }}\n          ></button>\n        </div>\n        {editInput}\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoItem from 'components/todo-item';\nclass ReactTodoItem extends HTMLElement {\n    set todoTitle(value) {\n      this._todoTitle = value;\n      this.render();\n    }\n    get todoTitle() {\n      return this._todoTitle;\n    }\n  \n    set todoCompleted(value) {\n      this._todoCompleted = value;\n      this.render();\n    }\n  \n    get todoCompleted() {\n      return this._todoCompleted;\n    }\n  \n    dispatchCustomEvent(name, detail) {\n      var event =\n        detail !== undefined\n          ? new CustomEvent(name, { detail })\n          : new CustomEvent(name);\n  \n      return this.dispatchEvent(event);\n    }\n  \n    todoToggle() {\n      this.dispatchCustomEvent('todo-toggle');\n    }\n  \n    todoRemove() {\n      this.dispatchCustomEvent('todo-remove');\n    }\n  \n    todoEdit(value) {\n      this.dispatchCustomEvent('todo-update-value', value);\n      this.dispatchCustomEvent('todo-edit');\n    }\n  \n    render() {\n      const {\n        _todoTitle,\n        _todoCompleted,\n        todoEdit,\n        todoToggle,\n        todoRemove\n      } = this;\n  \n      const propsReady = _todoTitle !== null && _todoCompleted !== null;\n  \n      if (propsReady) {\n        this._renderCount++;\n        // this._reactComponent for debugging only\n        this._reactComponent = ReactDOM.render(\n          <TodoItem\n            todoTitle={_todoTitle}\n            todoCompleted={_todoCompleted}\n            todoEdit={todoEdit.bind(this)}\n            todoToggle={todoToggle.bind(this)}\n            todoRemove={todoRemove.bind(this)}\n          />,\n          this\n        );\n        console.log('Render count: %s', this._renderCount);\n        console.log(this._reactComponent);\n      }\n    }\n  \n    connectedCallback() {\n      console.log('Element is connected.');\n      // this._renderCount only for debug\n      this._renderCount = 0;\n  \n      this._todoTitle = null;\n      this._todoCompleted = null;\n      this.addEventListener('todo-update-value', (e) => {\n        console.log('todo-update-value detail: %s', e.detail);\n        this.value = e.detail;\n      });\n    }\n  }\n  \n  export default ReactTodoItem;","import React from 'react';\n\nfunction RemoveBtn(props) {\n  return (\n    <button\n      onClick={(e) => {\n        props.remove();\n      }}\n    >\n      Remove\n    </button>\n  );\n}\n\nexport default RemoveBtn;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RemoveBtn from 'components/remove';\n\nclass RemoveElement extends HTMLElement {\n    set remove(value) {\n      this._remove = value;\n      console.log(value);\n      this.render();\n    }\n  \n    render() {\n      ReactDOM.render(<RemoveBtn remove={this._remove} />, this);\n    }\n  \n    connectedCallback() {\n      this.render();\n    }\n  }\n  \n  export default RemoveElement;","import React from 'react';\n\nclass TodoItemU extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editing: false\n    };\n    this.inputRef = React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!prevState.editing && this.state.editing) {\n      this.inputRef.current.focus();\n    }\n  }\n\n  render() {\n    const {\n      todoTitle,\n      todoCompleted,\n      todoEdit,\n      todoRemove,\n      todoToggle,\n      theme\n    } = this.props;\n\n    let itemClass = todoCompleted ? 'completed' : '';\n    let editInput = '';\n    if (this.state.editing) {\n      itemClass += ' editing';\n      editInput = (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={todoTitle}\n          ref={this.inputRef}\n          onChange={(e) => {\n            todoEdit(e.target.value);\n          }}\n          onBlur={(e) => {\n            this.setState({ editing: false });\n          }}\n          onKeyUp={(e) => {\n            if (e.key === 'Enter' || e.key === 'Escape') {\n              this.setState({ editing: false });\n            }\n          }}\n        />\n      );\n    }\n    \n    const themeStyle = {\n      backgroundColor : (theme === 'dark')? '#444' :'#fff',\n      color: (theme === 'dark')? '#fff' :'#000',\n    };\n\n    return (\n      <li className={itemClass} style={themeStyle}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todoCompleted}\n            onChange={(e) => {\n              todoToggle();\n            }}\n          />\n          <label\n            onDoubleClick={(e) => {\n              this.setState({ editing: true });\n            }}\n          >\n            {todoTitle}\n          </label>\n          <button\n            className=\"destroy\"\n            onClick={(e) => {\n              todoRemove();\n            }}\n          ></button>\n        </div>\n        {editInput}\n      </li>\n    );\n  }\n}\n\n\nexport default TodoItemU;\n","import { connect } from 'react-redux';\nimport TodoItemU from 'components/todo-item-u/todo-item-u';\n\nconst mapStateToProps = (state) => {\n    return {\n        theme: state.theme\n    }\n  }\n  \n  const ComponentTodoItemU = connect(\n    mapStateToProps,\n  )(TodoItemU);\n\n  export default ComponentTodoItemU;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from 'store';\nimport { Provider } from 'react-redux';\nimport ComponentTodoItemU from 'components/todo-item-u';\n\nclass ReactTodoItemU extends HTMLElement {\n    set todoTitle(value) {\n      this._todoTitle = value;\n      this.render();\n    }\n    get todoTitle() {\n      return this._todoTitle;\n    }\n  \n    set todoCompleted(value) {\n      this._todoCompleted = value;\n      this.render();\n    }\n  \n    get todoCompleted() {\n      return this._todoCompleted;\n    }\n  \n    dispatchCustomEvent(name, detail) {\n      var event =\n        detail !== undefined\n          ? new CustomEvent(name, { detail })\n          : new CustomEvent(name);\n  \n      return this.dispatchEvent(event);\n    }\n  \n    todoToggle() {\n      this.dispatchCustomEvent('todo-toggle');\n    }\n  \n    todoRemove() {\n      this.dispatchCustomEvent('todo-remove');\n    }\n  \n    todoEdit(value) {\n      this.dispatchCustomEvent('todo-update-value', value);\n      this.dispatchCustomEvent('todo-edit');\n    }\n  \n    render() {\n      const {\n        _todoTitle,\n        _todoCompleted,\n        todoEdit,\n        todoToggle,\n        todoRemove\n      } = this;\n  \n      const propsReady = _todoTitle !== null && _todoCompleted !== null;\n  \n      if (propsReady) {\n        this._renderCount++;\n        // this._reactComponent for debugging only\n        this._reactComponent = ReactDOM.render(\n          <Provider store={store}>\n            <ComponentTodoItemU\n              todoTitle={_todoTitle}\n              todoCompleted={_todoCompleted}\n              todoEdit={todoEdit.bind(this)}\n              todoToggle={todoToggle.bind(this)}\n              todoRemove={todoRemove.bind(this)}\n            />\n          </Provider>,\n          this\n        );\n        console.log('Render count: %s', this._renderCount);\n        console.log(this._reactComponent);\n      }\n    }\n  \n    connectedCallback() {\n      console.log('Element is connected.');\n      // this._renderCount only for debug\n      this._renderCount = 0;\n  \n      this._todoTitle = null;\n      this._todoCompleted = null;\n      this.addEventListener('todo-update-value', (e) => {\n        console.log('todo-update-value detail: %s', e.detail);\n        this.value = e.detail;\n      });\n    }\n  \n    disconnectedCallback() {\n      ReactDOM.unmountComponentAtNode(this);\n    }\n  }\n  \n  export default ReactTodoItemU;","// make custom element definition here\nimport MockElement from 'alien_components/mock';\nimport ReactTodoFooter from 'alien_components/todo-footer';\nimport ReactTodoItem from 'alien_components/todo-item';\nimport RemoveElement from 'alien_components/remove';\nimport ReactTodoItemU from 'alien_components/todo-item-u';\n// import store  from 'store';\n// import { changeTheme } from 'actions';\nconsole.log('0.5.0');\n\n\ncustomElements.define('mock-element', MockElement);\ncustomElements.define('react-todo-footer', ReactTodoFooter);\ncustomElements.define('react-todo-item', ReactTodoItem);\ncustomElements.define('react-todo-item-unmount', ReactTodoItemU);\ncustomElements.define('react-remove-btn', RemoveElement);\n\n// var todoItemElem = document.createElement('react-todo-item-unmount');\n// todoItemElem.todoCompleted = true;\n// todoItemElem.todoTitle = \"bingo\";\n// todoItemElem.todoToggle = () => {console.log('todo-toggle')};\n// todoItemElem.todoRemove = () => {console.log('todo-remove')};\n// todoItemElem.todoEdit = () => {console.log('todo-edit')};\n\n// document.body.append(todoItemElem);\n\n// var todoFooter = document.createElement('react-todo-footer');\n// todoFooter.status = 'All'; \n// todoFooter.router = {};\n// todoFooter.count = 1;\n// todoFooter.hasCompleted = true;\n// todoFooter.removeCompleted = () => {console.log('removeCompleted')}\n\n\n// document.body.append(todoFooter);\n// // setTimeout(()=>{\n// //     store.dispatch(changeTheme('dark'))\n// // }, 3000);"],"sourceRoot":""}