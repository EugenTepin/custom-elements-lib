{"version":3,"sources":["components/mock.js","components/todo-footer.js","components/todo-item.js","components/remove.js","index.js"],"names":["Mock","props","name","MockElement","ReactDOM","render","this","toString","_name","value","console","log","HTMLElement","TodoFooter","removeCompleted","count","clearBtn","hasCompleted","className","onClick","e","to","activeClassName","React","Component","ReactTodoFooter","event","CustomEvent","dispatchEvent","_count","_hasCompleted","bind","addEventListener","detail","_router","navigate","stopPropagation","_status","TodoItem","todoEdit","setState","target","todoToggle","status","state","todoTitle","satus","todoCompleted","editing","itemClass","editInput","type","onChange","onBlur","onKeyUp","key","checked","onDoubleClick","todoRemove","ReactTodoItem","undefined","dispatchCustomEvent","_value","_reactComponent","_todoTitle","_todoCompleted","_editing","JSON","stringify","RemoveBtn","remove","RemoveElement","_remove","customElements","define"],"mappings":"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","file":"static/js/main.df04f0ed.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Mock(props) {\n  return <span>Hello, {props.name}</span>;\n}\n\nclass MockElement extends HTMLElement {\n  set name(value) {\n    this._name = value;\n    console.log(value);\n    this.render();\n  }\n  get name() {\n    return this._name;\n  }\n\n  render() {\n    ReactDOM.render(<Mock name={this.name.toString()} />, this);\n  }\n\n  connectedCallback() {\n    this._name = 'test';\n    this.render();\n  }\n}\n\nexport default MockElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NavLink } from 'react-router-dom';\n\nclass TodoFooter extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   // this.state = {clicks: 0};\n  // }\n  removeCompleted = () => {\n    this.props.removeCompleted();\n  };\n  render() {\n    const { count } = this.props;\n    if (count === 0) {\n      return null;\n    }\n\n    const clearBtn = this.props.hasCompleted ? (\n      <button\n        className=\"clear-completed\"\n        onClick={(e) => {\n          this.removeCompleted();\n        }}\n      >\n        Clear Completed\n      </button>\n    ) : (\n      ''\n    );\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{count}</strong> {count === 1 ? 'item' : 'items'} left\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <NavLink\n              to=\"/\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/');\n              }}\n            >\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/active\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/active');\n              }}\n            >\n              Active\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/completed\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/completed');\n              }}\n            >\n              Completed\n            </NavLink>\n          </li>\n        </ul>\n        {clearBtn}\n      </footer>\n    );\n  }\n}\n\nclass ReactTodoFooter extends HTMLElement {\n  set status(value) {\n    this._status = value;\n    this.render();\n  }\n  get status() {\n    return this._status;\n  }\n\n  set router(value) {\n    this._router = value;\n    this.render();\n  }\n  // get status() {\n  //   return this._status;\n  // }\n\n  set count(value) {\n    this._count = value;\n    this.render();\n  }\n  get count() {\n    return this._count;\n  }\n\n  set hasCompleted(value) {\n    this._hasCompleted = value;\n    this.render();\n  }\n  get hasCompleted() {\n    return this._hasCompleted;\n  }\n\n  removeCompleted() {\n    var event = new CustomEvent('clear-completed');\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    ReactDOM.render(\n      <TodoFooter\n        count={this._count}\n        hasCompleted={this._hasCompleted}\n        removeCompleted={this.removeCompleted.bind(this)}\n      />,\n      this\n    );\n  }\n\n  connectedCallback() {\n    this.addEventListener('nav-link-click', (e) => {\n      console.log(e);\n      const { to } = e.detail;\n      this._router.navigate([to]);\n      e.stopPropagation();\n    });\n\n    this.render();\n  }\n}\n\nexport default ReactTodoFooter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/**\n * Props\n * todoTitle\n * todoCompleted\n * editing\n * todoEdit\n * todoToggle\n * todoRemove\n */\n\nclass TodoItem extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log('TodoItem props');\n    console.log(this.props);\n    this.state = {\n      value: this.props.todoTitle,\n      satus: this.props.todoCompleted,\n      editing: this.props.editing\n    };\n  }\n  todoEdit = (event) => {\n    this.setState({ value: event.target.value });\n    this.props.todoEdit();\n  };\n\n  todoToggle = () => {\n    this.setState({ status: !this.state.status });\n    this.props.todoToggle();\n  };\n\n  render() {\n    console.log('TodoItem state');\n    console.log(this.state);\n    let itemClass = this.state.status ? 'completed' : '';\n    let editInput = '';\n    if (this.state.editing) {\n      itemClass += ' editing';\n      editInput = (\n        <input\n          type=\"text\"\n          className=\"edit\"\n          onChange={(e) => {\n            this.todoEdit(e);\n          }}\n          onBlur={(e) => {\n            this.setState({ editing: false });\n          }}\n          onKeyUp={(e) => {\n            if (e.key === 'Enter' || e.key === 'Escape') {\n              this.setState({ editing: false });\n            }\n          }}\n          value={this.state.value}\n        />\n      );\n    }\n\n    return (\n      <li className={itemClass}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={this.state.status}\n            onClick={(e) => {\n              this.todoToggle();\n            }}\n          />\n          <label\n            onDoubleClick={(e) => {\n              this.setState({ editing: true });\n            }}\n          >\n            {this.state.value}\n          </label>\n          <button\n            className=\"destroy\"\n            onClick={(e) => {\n              this.props.todoRemove();\n            }}\n          ></button>\n        </div>\n        {editInput}\n      </li>\n    );\n  }\n}\n\nclass ReactTodoItem extends HTMLElement {\n  set todoTitle(value) {\n    this._todoTitle = value;\n    //this._value = value; // test\n    this.render();\n  }\n  get todoTitle() {\n    return this._todoTitle;\n  }\n\n  set todoCompleted(value) {\n    this._todoCompleted = value;\n    this.render();\n  }\n\n  get todoCompleted() {\n    return this._todoCompleted;\n  }\n\n  set editing(value) {\n    console.log('editing is set to: ' + value);\n    this._editing = value;\n    this.render(); // maybe this should be removed\n  }\n\n  get editing() {\n    return this._editing;\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  dispatchCustomEvent(name, detail) {\n    var event =\n      detail !== undefined\n        ? new CustomEvent(name, { detail })\n        : new CustomEvent(name);\n\n    return this.dispatchEvent(event);\n  }\n\n  todoToggle() {\n    this.dispatchCustomEvent('todo-toggle');\n  }\n\n  todoRemove() {\n    this.dispatchCustomEvent('todo-remove');\n  }\n\n  todoEdit() {\n    this._value = this._reactComponent.state.value;\n    this.dispatchCustomEvent('todo-edit');\n  }\n\n  render() {\n    this._reactComponent = ReactDOM.render(\n      <TodoItem\n        todoTitle={this._todoTitle}\n        todoCompleted={this._todoCompleted}\n        editing={this._editing}\n        todoEdit={this.todoEdit.bind(this)}\n        todoToggle={this.todoToggle.bind(this)}\n        todoRemove={this.todoRemove.bind(this)}\n      />,\n      this\n    );\n    console.log(JSON.stringify(this._reactComponent));\n  }\n\n  connectedCallback() {\n    console.log('Element is connected.');\n    console.log(this._todoTitle);\n    this.render();\n  }\n}\n\nexport default ReactTodoItem;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction RemoveBtn(props) {\n  return (\n    <button\n      onClick={(e) => {\n        props.remove();\n      }}\n    >\n      Remove\n    </button>\n  );\n}\n\nclass RemoveElement extends HTMLElement {\n  set remove(value) {\n    this._remove = value;\n    console.log(value);\n    this.render();\n  }\n\n  render() {\n    ReactDOM.render(<RemoveBtn remove={this._remove} />, this);\n  }\n\n  connectedCallback() {\n    this.render();\n  }\n}\n\nexport default RemoveElement;\n","// make custom element definition here\nimport MockElement from 'components/mock';\nimport ReactTodoFooter from 'components/todo-footer';\nimport ReactTodoItem from 'components/todo-item';\nimport RemoveElement from 'components/remove';\n\ncustomElements.define('mock-element', MockElement);\ncustomElements.define('react-todo-footer', ReactTodoFooter);\ncustomElements.define('react-todo-item', ReactTodoItem);\ncustomElements.define('react-remove-btn', RemoveElement);\n"],"sourceRoot":""}