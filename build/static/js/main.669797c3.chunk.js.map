{"version":3,"sources":["components/mock.js","components/todo-footer.js","components/todo-item.js","index.js"],"names":["Mock","props","name","MockElement","ReactDOM","render","this","toString","_name","value","console","log","HTMLElement","TodoFooter","removeCompleted","count","clearBtn","hasCompleted","className","onClick","e","to","activeClassName","React","Component","ReactTodoFooter","event","CustomEvent","dispatchEvent","_count","_hasCompleted","bind","addEventListener","detail","_router","navigate","stopPropagation","_status","TodoItem","todoTitle","todoToggle","todoRemove","todoEdit","todoStopEdit","todoSubmit","todoCancelEdit","setTodoValue","todoCompleted","itemClass","editInput","editing","type","checked","ReactTodoItem","inputVal","bubbles","_todoTitle","_todoCompleted","_editing","_value","customElements","define"],"mappings":"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","file":"static/js/main.669797c3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Mock(props) {\n  return <span>Hello, {props.name}</span>;\n}\n\nclass MockElement extends HTMLElement {\n  set name(value) {\n    this._name = value;\n    console.log(value);\n    this.render();\n  }\n  get name() {\n    return this._name;\n  }\n\n  render() {\n    ReactDOM.render(<Mock name={this.name.toString()} />, this);\n  }\n\n  connectedCallback() {\n    this._name = 'test';\n    this.render();\n  }\n}\n\nexport default MockElement;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NavLink } from 'react-router-dom';\n\nclass TodoFooter extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   // this.state = {clicks: 0};\n  // }\n  removeCompleted = () => {\n    this.props.removeCompleted();\n  };\n  render() {\n    const { count } = this.props;\n    if (count === 0) {\n      return null;\n    }\n\n    const clearBtn = this.props.hasCompleted ? (\n      <button\n        className=\"clear-completed\"\n        onClick={(e) => {\n          this.removeCompleted();\n        }}\n      >\n        Clear Completed\n      </button>\n    ) : (\n      ''\n    );\n    return (\n      <footer className=\"footer\">\n        <span className=\"todo-count\">\n          <strong>{count}</strong> {count === 1 ? 'item' : 'items'} left\n        </span>\n        <ul className=\"filters\">\n          <li>\n            <NavLink\n              to=\"/\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/');\n              }}\n            >\n              All\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/active\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/active');\n              }}\n            >\n              Active\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/completed\"\n              activeClassName=\"selected\"\n              onClick={(e) => {\n                console.log('/completed');\n              }}\n            >\n              Completed\n            </NavLink>\n          </li>\n        </ul>\n        {clearBtn}\n      </footer>\n    );\n  }\n}\n\nclass ReactTodoFooter extends HTMLElement {\n  set status(value) {\n    this._status = value;\n    this.render();\n  }\n  get status() {\n    return this._status;\n  }\n\n  set router(value) {\n    this._router = value;\n    this.render();\n  }\n  // get status() {\n  //   return this._status;\n  // }\n\n  set count(value) {\n    this._count = value;\n    this.render();\n  }\n  get count() {\n    return this._count;\n  }\n\n  set hasCompleted(value) {\n    this._hasCompleted = value;\n    this.render();\n  }\n  get hasCompleted() {\n    return this._hasCompleted;\n  }\n\n  removeCompleted() {\n    var event = new CustomEvent('clear-completed');\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    ReactDOM.render(\n      <TodoFooter\n        count={this._count}\n        hasCompleted={this._hasCompleted}\n        removeCompleted={this.removeCompleted.bind(this)}\n      />,\n      this\n    );\n  }\n\n  connectedCallback() {\n    this.addEventListener('nav-link-click', (e) => {\n      console.log(e);\n      const { to } = e.detail;\n      this._router.navigate([to]);\n      e.stopPropagation();\n    });\n\n    this.render();\n  }\n}\n\nexport default ReactTodoFooter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass TodoItem extends React.Component {\n  render() {\n    const {\n      todoToggle,\n      todoRemove,\n      todoEdit,\n      todoStopEdit,\n      todoSubmit,\n      todoCancelEdit,\n      setTodoValue,\n      todoTitle,\n      todoCompleted,\n      editing\n    } = this.props;\n\n    const itemClass = todoCompleted ? 'completed' : '';\n    const editInput = '';\n    if (editing) {\n      itemClass += ' editing';\n      editInput = <input type=\"text\" className=\"edit\" value={todoTitle} />;\n    }\n\n    return (\n      <li className={itemClass}>\n        <div className=\"view\">\n          <input type=\"checkbox\" className=\"toggle\" checked={todoCompleted} />\n          <label>{todoTitle}</label>\n          <button className=\"destroy\"></button>\n        </div>\n        {editInput}\n      </li>\n    );\n  }\n}\n\nclass ReactTodoItem extends HTMLElement {\n  todoToggle() {\n    var event = new CustomEvent('todo-toggle');\n    this.dispatchEvent(event);\n  }\n\n  todoRemove() {\n    var event = new CustomEvent('todo-remove');\n    this.dispatchEvent(event);\n  }\n\n  todoEdit() {\n    var event = new CustomEvent('todo-edit');\n    this.dispatchEvent(event);\n  }\n\n  todoStopEdit() {\n    var event = new CustomEvent('todo-stop-edit');\n    this.dispatchEvent(event);\n  }\n\n  todoSubmit() {\n    var event = new CustomEvent('todo-submit');\n    this.dispatchEvent(event);\n  }\n\n  todoCancelEdit() {\n    var event = new CustomEvent('todo-cancel-edit');\n    this.dispatchEvent(event);\n  }\n\n  setTodoValue() {\n    const inputVal = this.value;\n    (function(inputVal) {\n      var event = new CustomEvent('set-todo-value', {\n        detail: inputVal,\n        bubbles: true\n      });\n      this.dispatchEvent(event);\n    }.bind(this)(inputVal));\n  }\n\n  set todoTitle(value) {\n    this._todoTitle = value;\n    this.render();\n  }\n\n  set todoCompleted(value) {\n    this._todoCompleted = value;\n    this.render();\n  }\n\n  set editing(value) {\n    this._editing = value;\n    this.render();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  render() {\n    ReactDOM.render(\n      <TodoItem\n        todoToggle={this.todoToggle.bind(this)}\n        todoRemove={this.todoRemove.bind(this)}\n        todoEdit={this.todoEdit.bind(this)}\n        todoStopEdit={this.todoStopEdit.bind(this)}\n        todoSubmit={this.todoSubmit.bind(this)}\n        todoCancelEdit={this.todoCancelEdit.bind(this)}\n        setTodoValue={this.setTodoValue}\n        todoTitle={this._todoTitle}\n        todoCompleted={this._todoCompleted}\n        editing={this._editing}\n      />,\n      this\n    );\n  }\n\n  connectedCallback() {\n    this.addEventListener('set-todo-value', (e) => {\n      console.log(e);\n      this._value = e.detail.value;\n      e.stopPropagation();\n    });\n\n    this.render();\n  }\n}\n\nexport default ReactTodoItem;\n","// make custom element definition here\nimport MockElement from 'components/mock';\nimport ReactTodoFooter from 'components/todo-footer';\nimport TodoItem from 'components/todo-item';\ncustomElements.define('mock-element', MockElement);\ncustomElements.define('react-todo-footer', ReactTodoFooter);\ncustomElements.define('react-todo-item', TodoItem);\n"],"sourceRoot":""}